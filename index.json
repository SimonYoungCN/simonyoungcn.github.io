[{"categories":null,"contents":" 原文地址：https://what-if.xkcd.com/3/\n Ryan Finnie\n尤达(Yoda)1可以输出多少功率的原力？\n 当然，我在这里就不再赘述前传了。\n有幅有趣的SMBC漫画探讨了利用超人生产能源的地缘政治的结果。我们可以想象尤达利用原力驱动一个类似的发电机。但是他到底能提供多少能量呢？\n尤达使用原力的最好体现是在原三部曲里他把卢克(Luke)2的X翼战机从沼泽中提起来的场景。就物理层面移动物体而言，这显而易见成为了三部曲中尤达能量消耗最大的一次。\n抬升一个物体到一定高度h所需能量等于该物体的质量乘以该物体的重力乘以提升高度。尤达提升X翼战机的场景能够让我们得知尤达原力输出功率峰值的下限。\n首先我们需要得知战机的质量。X翼战机的质量从未被规范确定过，但是它有12.5米长。一架F-22战机有19米长，重达19700千克。所以，按比例缩小后，X翼战机的估计重量约为12000磅（或5吨）。\n$$m_{x} = m_{f22} \\times \\left(\\frac{12.5}{19}\\right)^{3} \\approx 5,600\\mathrm{kg}$$\n下一步，我们需要知道战机被提起来的速度。我重温了一遍那个桥段，给战机露出水面的场景记了个时。\n前着陆支架在大约三秒半的时间内从水里升起，我估测支架应该有1.4米长（通过《星球大战IV：新希望》中一名工作人员挤过去的一幕得出），也就是说X翼战机被抬升的速度为0.39m/s。\n最后我们要知道达可巴星的重力加速度。到了这一步时，我觉得自己已经进行不下去了。因为就算那些科幻影迷再走火入魔，也不太可能会有《星球大战》上各个行星的次要地球物理数据表。对吧？\n太天真了。我低估了fandom3的力量。Wookieepeedia4正好就有这样的数据表。通过查询可以知道达可巴星表面的重力加速度是0.9g。把前面我们得到的数据结合起来就可以得出尤达的峰值功率输出：\n$$\\frac{5,600 \\mathrm{kg} \\times 0.9\\mathrm{g} \\times 1.4 \\text{meters}}{3.6 \\text{ seconds}} = 19.2\\mathrm{kW}$$\n这已经足够为一片市区住宅供能了。输出大小约等于25马力，与电动汽车Smart Car的功率相吻合。\n按照现在5的电价，尤达的价值约为每小时2美元。\n但是心灵感应只是原力的其中一种。那么希夫·帕尔帕廷(the Emperor)6用来劈死卢克的闪电的能量有多大？ 它的物理性质从未有人弄清楚过，但是制造相似效果的特斯拉线圈输出功率大约有10千瓦。不难看出希夫与尤达旗鼓相当。（那些特斯拉线圈用了大量短脉冲。如果希夫的输出是连续电弧的形式，放在电焊机上的话，能量可以轻易达到百万瓦特级别。\n那么卢克呢？我仔细看了看他用尚未成熟的原力将光剑从雪中拔出来的场景。具体数字很难说，但是我逐帧分析之后得出结论：卢克峰值输出大约为400瓦。相比于尤达的19千瓦输出只能算极少一部分，况且也只持续了不到一秒钟。\n所以看起来尤达是我们最好的能量来源。但是全球电力消耗正向两太瓦逼近，可能要两亿个尤达才能满足我们的需求。综合所有因素，使用尤达的能源可能入不敷出——尽管它肯定是绿色清洁的。\n  尤达是《星球大战》系列中的虚拟角色，无论声音或布偶演绎，六部曲全由法兰克·欧兹所担任。他具有强大的力量和智慧，与至高的品德。——摘自维基百科\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 卢克·天行者是一名为乔治·卢卡斯导演的著名科幻电影《星球大战》正传三部曲中的主要人物。由马克·汉米尔饰演。——摘自维基百科\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Fandom是一个创立于2004年10月18日的wiki农场，创立者为吉米·威尔士和安琪拉·贝丝蕾，主要提供用户创建wiki网站。Fandom公司集结了许多不同群体的wiki网站，免费提供用户阅读和参与编辑，以广告作为收入来源。——摘自维基百科\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Wookieepedia是一部提供《星球大战》虚构世界资讯的网络百科全书，包括了所有的九部星战电影，以及克隆人战争和延伸世界的讯息。它是以建立一部全方位介绍星球大战世界的百科全书为目的而专门设立的Wiki站点。文章在书面风格上几乎是从虚构世界的视角来描述主题。——摘自维基百科\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 2011年——译者注\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 希夫·帕尔帕庭，又译帕尔普廷或白卜庭，西斯名为达斯·西迪厄斯，是《星球大战》中的人物，本来是共和国纳布星议员。怂恿爱米达拉女王要求最高议长菲尼斯·维洛伦下台，由他角逐并获选最高议长。在任期间与贸易联盟交恶，并幕后策动了克隆战争。其真实身份是被绝地议会认为灭绝千年的西斯势力尊主。旗下弟子有达斯·摩尔、杜库伯爵以及维德。——摘自维基百科\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2022-07-18T12:07:41+08:00","permalink":"https://simonyoungcn.github.io/post/yoda/","section":"post","tags":["xkcd","翻译"],"title":"尤达"},{"categories":null,"contents":" 原文地址：https://what-if.xkcd.com/2/\n Rob Balder\n如果每个SAT1考生做多选题时都乱猜一气会发生什么？会有多少个满分呢？\n 一个也没有。\nSAT测试是面对高中生的标准化测试，与ACT（美国大学入学考试）相似。有时候，快乐一猜确实是一个很好的策略。但如果你所有选择题都靠猜呢？\n不是所有的SAT选择题都是多选题，所以我们干脆简化这个问题——只考虑多选题。我们假定所有人写作和排序题都是满分。\n数学部分有44道多选题，批判性阅读有67道，新式写作有47道。每道选择题有五项选择，所以随机猜的话有20%的概率能够猜对。\n尽管我们都明白答案总是选B……\n那么158道题全对的概率是：\n$$ \\frac{1}{5^{44}} * \\frac{1}{5^{67}} * \\frac{1}{5^{47}} \\approx \\frac{1}{2.7 * 10^{110}} $$\n如果总共四百万17岁的人全部参加SAT考试，而且他们都采用“考试乱猜”策略。数据上可以确定的是，在这三个部分中不会有一个满分。\n有多确定？如果他们人手一台电脑，每天运算一百万次，并且保持五十亿年——直到太阳变为一颗红巨星，地球被烧成灰烬——他们之中任意一位仅数学部分拿到满分的概率只有0.0001%。\n这可能性有多小？每一年大约有500个美国人被闪电击中，2 3 4这其中平均有45起因雷击而死的案例和9-10%的死亡率。这些数据表明任意一个美国人在任意一年内被闪电击中的概率大约是七十万分之一（尽管概率有时会捉弄人）。\n这就意味着SAT猜全对的概率比所有健在的美国前总统和《萤火虫》5所有主演在同一天各自被雷击中的概率还小。\n除了Alan Tudyk和Ron Glass之外其余人都活了下来。\n祝今年参加SAT的各位考生好运，虽然只凭运气肯定是不行的。😝\n  SAT，也称 “美国高考” ，是由美国大学理事会（College Board）主办的一项标准化的、以笔试形式进行的高中毕业生学术能力水平考试。其成绩是世界各国高中毕业生申请美国高等教育院校入学资格及奖学金的重要学术能力参考指标。——摘自百度百科\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Cooper, Mary Ann, MD. \u0026ldquo;Disability, Not Death is the Main Problem with Lightning Injury\u0026rdquo;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n http://www.nws.noaa.gov/om/hazstats/light08.pdf\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 注二注三的链接均已失效。——译者注\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 《萤火虫》是一部美国科幻电视剧，2002年9月20日于美国和加拿大首播，以传统西部电影为原型，自然主义为设定，剧中大量使用中文，呈献出一部与众不同的科幻戏剧。——摘自维基百科\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2022-07-12T18:20:51+08:00","permalink":"https://simonyoungcn.github.io/post/sat-guessing/","section":"post","tags":["xkcd","翻译"],"title":"考试乱猜"},{"categories":null,"contents":" 原文地址：https://what-if.xkcd.com/1/\n Ellen Mcmanis\n如果你用0.9倍光速扔出一个棒球, 将会发生什么？\n 让我们暂且将我们如何加速棒球这个问题放在一边。假设它就是一次普通的掷球，不过在投球手掷出棒球的瞬间，魔法将棒球加速到了0.9倍光速。在那之后，普通的物理学规律又开始发挥作用：\n答案是会发生“很多事情”，并且会发生得非常迅速，而且无论是投球手还是击球手都没有好下场。我带着几本物理学书、Nolan Ryan1的人偶以及核试验的录像带坐了下来，试图得到答案。接下来是我对这一纳秒级事件场面所能做出的最准确的猜想：\n棒球飞得太快，以至于其余一切事物，哪怕是分子都几乎静止。空气分子以每小时上千千米的速度前后振动，但相对于每小时近十亿千米每小时的棒球，它们就如同被冻结在了空中。\n空气动力学的观点在这里已不适用。正常情况下，空气会从一切穿过空气的物体表面流过。但棒球前的空气分子并没有时间挤出去。棒球猛烈地撞击空气分子，甚至能使它们与棒球表面发生聚变。二者间的每一次碰撞都会射出大量伽马射线和四散的粒子。\n这些伽马射线和碎片以投球手垒为中心，如一个泡泡般向外扩展。它们开始将空气里的分子撕开，把电子从原子内扯出来，并把体育场的空气变成了一团炽热的等离子体。气泡壁以大约光的速度接近击球手，稍稍领先于棒球。\n棒球前端持续的聚合物阻碍其运动，迫使棒球减速。这情景就如同火箭引擎向速度方向点火减速。不幸的是，棒球速度过快，即使是热核反应爆炸产生的巨力也无法使其减速。但爆炸确实开始剥蚀棒球表面，就将小颗粒物质碎片向四周射出。这些被散射出的粒子速度快到能够撞击空气分子而形成另外两到三轮新的聚变。\n大约70纳秒后，棒球到达了本垒。这时，因为携带投球信息的光与棒球几乎同时到达，击球手甚至还没有看见投球投球的动作。棒球与空气的剧烈碰撞几乎完全吞噬了棒球，只剩一朵子弹形状、正在扩散的等离子体（主要含有碳、氧、氢、氮等元素）云撞击着空气，同时引发着更多聚变。X射线的外壳首先接触本垒，几纳秒之后，碎片云也接踵而至。\n当这些物质到达击球手所在位置时，等离子体云中心的速度仍然以略低于光速的速度向前移动，先是撞到球棒，然后是击球手、本垒和捕手。这些事物被裹挟着，在分解的同时撞向后面的挡球网。X射线的外壳和高热的等离子体继续扩散，吞噬了挡球网、双方队员、看台和周围的社区。而这一切都发生在第一个毫秒之内。\n设想你站在城区外一座小山的山顶上观看这场比赛。第一眼你看到的是一片刺眼的光芒，其亮度远远超过太阳。几秒钟之后光芒逐渐暗淡，一个大火球升起，变成了一朵蘑菇云。然后，随着一声巨响，冲击波抵达，将草木和房屋撕了个粉碎。\n大约距离棒球场一英里以内的区域被夷平，风暴也会吞没周围的城市。棒球场如今变成了一个相当大的陨石坑，它的中心就在先前挡球网所在位置往后几十米处。\n官方的美国职业棒球大联盟规则 6.08(b)中详细规定，在这种情况之下会被判定为“触身球”，击球手会被保送上一垒。2\n  爱尔兰裔美国籍棒球手。——译者注\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n 棒球规则中，故意投球击打击球手会判投球手犯规，但球先接触球棒或在好球带之内除外。本文不详细探讨规则，只做简要说明，感兴趣的读者可在网上查询详细规则。——译者注\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"2022-06-28T12:32:00Z","permalink":"https://simonyoungcn.github.io/post/relativistic-baseball/","section":"post","tags":["xkcd","翻译"],"title":"相对论棒球"},{"categories":null,"contents":"我从2018年左右第一次接触到《What if》，开始就觉得文风风趣幽默，如作者所言“再荒谬的问题都可能有一个科学答案”。后来在科学松鼠会找到了朱君玺和Ent合译的大部分what if文章，不过在大约2019年时，网站登不上去了，所有的译文也全部消失。现在我也有了时间，就打算把一篇篇文章重新翻译出来，既是致敬，也是推广（不过我这一点流量也没有的地方也敢提流量……）。\n关于阅读xkcd的译文，有如下几点注意事项：\n 鼠标悬停于图片之上，就可以看到图片的说明。 点击文章中绿色的数字，就可以看到注释或作者对此的说明与吐槽，再点击返回箭头即可自动跳转回原文处。由于主题限制，无法做到在原文处阅读注释，请见谅。 如需转载，请附上出处www.xkcd.com及相关译文网址。 最近由于网络问题（懂得都懂），部分链接无法本土化，可能以后有条件会改进，敬请谅解。  ","date":"2022-06-27T21:35:55+08:00","permalink":"https://simonyoungcn.github.io/post/explanation/","section":"post","tags":["xkcd"],"title":"关于翻译xkcd-what if的一点说明"},{"categories":null,"contents":"最近踩了许多坑，总结出来与君共勉。由于本人的确是纯小白，每一个坑基本都踩过，文章也应该会有点小儿科，烦请见谅。😃\n配置环境\nWindows 10 20H2 惠普战66 R5-5625U\n Neovim及插件 init.vim Neovim插件配置文件即为init.vim，安装和配置插件都在这里实现。一般是在call begin()和call end()之间加入自己需要安装的插件，然后再在最后添加let g:等配置信息。说白了Neovim的配置都在这个文件里部署, 例如设置鼠标控制光标等。不知道是系统的原因还是什么，我只能把init.vim放在C:\\Users\\simon\\AppData\\Local\\nvim里而把存放插件的地方设置为C:\\Users\\simon\\.AppData\\local\\nvim\\plugged里。放在其他地方就会报错。\n另外, 我似乎还不知道Windows 10 系统下如何打通与Neovim的剪贴板，希望知道的人能够慷慨留言告诉我一下。😉\nUsnippets 这确实是个好东西。但是它需要配合vim-snippet使用，否则就只是一具空壳而已。\nMarkdownPreview 由GitHub用户\u0026quot;iamcco\u0026quot;开发，使用十分便利。\n只不过在我的环境下，用它打开默认浏览器还需要把chrome.exe的路径添加到path里。\nHugo 配置主题 直接下载对应主题文件，粘贴到theme文件夹即可。但是配置文件里主题名称要和主题文件夹名称保持一致。\nmathjax支持 我的网站上使用的主题是even，由GitHub用户ahonn开发，GitHub用户olOwOlo移植到了hugo上。在此对两位开发者致以崇高的敬意。不过虽然我在config.toml里开启了对mathjax的支持，数学公式仍然无法被识别。于是我在GitHub上下载了mathjax的文件，也确实能够识别数学公式（注意此处git clone下来的mathjax文件夹名称应该改为mathjax，还要全部小写，并放在your-site/static/lib/mathjax的路径里）。但在进行git push之后报错：\nbuild-checkout\n1 2  Error: fatal: No url found for submodule path \u0026#39;lib/mathjax\u0026#39; in .gitmodules Error: The process \u0026#39;/usr/bin/git\u0026#39; failed with exit code 128    后面上网查了一下，发现是mathjax文件夹里还有隐藏的.git文件，需要执行如下命令将其删除1：\n1 2 3 4  $ git rm --cached $ git add . $ git commit -m \u0026#34;commit messge\u0026#34; $ git push origin [branch_name]   部署到GitHub Pages 目前GitHub已经默认主分支名称为main，但大部分教程仍旧是master，相关改动可以参考这里的评论区。反正我push时main分支一直报错，于是我先push到master，然后把main给删了，简单粗暴。😆\n评论(Utterances) 另建一个repo，用于存放issue形式的评论。\n注意\nHugo的配置文档里第一行baseURL不能加www.的前缀，只能是https://[YOUR_GITHUB_ID].github.io。另外, 配置文件里的repo只用填写自己的repo名，不用加用户名。\n 为了这一问题我甚至还去Utterances里死皮赖脸提了个issue…… 😂\nVS Code Neovim实在用不惯，只用来做笔记算了，积累了小半篇的markdown.snippet，做笔记的速度还是蛮快的。😃只不过各方面都没有VSCode好用：中文逗号、冒号等打不出来；不能复制粘贴；功能不强大。 曾经看到过知乎上抖机灵的回答，说(Neo)vim是军刀，IDE是航母。不可否认，vim系列的编辑器优点多多，比如对系统配置要求低，运行速度快，可键盘控制。但个人认为，军刀安装再多插件，装备再丰富，终究不敌航母。写东西是为了方便快捷，而不是去习惯畸形的操作方式。只有自己用起来最顺手的东西才是最好的。\n用VSCode其实还挺方便的，就比如复制粘贴，可以大大提高我的效率(doge)。\n注意\n若要在vscode里为 markdown文件创建snippets，除了按照 官方文档说的来做之外，还要找到vscode的设置文件 settings.json，在下方加一行 \u0026quot;[markdown]\u0026quot;: { \u0026quot;editor.quickSuggestions\u0026quot;: true }。2\n snippets 换用VSCode后死心不改，仍然不舍放下snippets。于是网上一查，又开始折腾。vscode的snippets是用json格式写的。这里分享一个快速制作json格式snippets的网站。好不容易做完之后，却发现markdown文件根本无法弹出补全列表。查了一下，需要在settings.json里加入如下语句：\n1 2 3 4 5 6 7 8 9 10 11  \u0026#34;[markdown]\u0026#34;: { \u0026#34;editor.formatOnSave\u0026#34;: true, \u0026#34;editor.renderWhitespace\u0026#34;: \u0026#34;all\u0026#34;, \u0026#34;editor.quickSuggestions\u0026#34;: { \u0026#34;other\u0026#34;: true, \u0026#34;comments\u0026#34;: true, \u0026#34;strings\u0026#34;: true }, \u0026#34;editor.acceptSuggestionOnEnter\u0026#34;: \u0026#34;on\u0026#34; },   但我添加之后，系统一直报错，后来在网上查找发现，依据json格式文件规定，在这段代码前还应加上一个逗号。\n就先写到这里, 以后随时参考，随时补充。\n《孔雀东南飞》\n多谢后世人, 诫之慎莫忘。\n 后记：过了一个多月，我终于等到了Linux Mint 21的镜像，虽说是beta版，但是至少高通的网卡能识别了。想起我刚拿到电脑时兴致勃勃地安装了Linux Mint 20.3以后才发现根本识别不了网卡，然而Windows系统在我全局安装时又被我删了，所以……\n现在也在逐步开始适应neovim，花了一天的时间配置，效果还不错，可能之后也会坚持着用吧，毕竟我还是比较喜欢专注于一个软件，自己写的snippets不舍得就此放弃。还好，自己也慢慢地攻克了难关，markdownpreview的附加依赖下载时不会更新进度，就让它安静地下载。 中文符号输入不正确的bug还没有找到，不过大概率是某一个插件引起的，neovim还是空壳的时候，输入中文并没有任何问题，不过我还是利用利用snippets把这个bug尽量弥补了，比如我按中文分号；就会跳出来¼\u0026lt;xCSI\u0026gt;这玩意儿。所以我直接把那堆乱码设成了中文分号的触发键。后续打算再排查一下，也希望了解这种情况的人能够留言告诉缘由，不尽感激。 还有一个比较奇怪的点，我在Windows上没有遇到，但是在Linux上遇到了的问题是明明好看的主题应用之后变得十分难看，还以为这是Linux系统特点。后面偶然看见讨论说还要set termguicolors，之后果然熟悉的配色又回来了。\n道阻且长，继续努力吧。😃\n贴一张screenshot：\n","date":"2022-06-21T17:55:58+08:00","permalink":"https://simonyoungcn.github.io/post/traps/","section":"post","tags":["技术"],"title":"踩坑记录"},{"categories":null,"contents":"经过7天的不懈努力，终于解决了电脑无线网卡，蓝牙断断续续，vim-plug无法安装，markdownpreview无响应，网站部署失败等问题。如今问题都已得到解决，可以定心于学海之中，专心致志，砥砺前行。特此纪念。\n","date":"2022-06-20T18:38:49+08:00","permalink":"https://simonyoungcn.github.io/post/my-first-post/","section":"post","tags":null,"title":"新篇章"}]